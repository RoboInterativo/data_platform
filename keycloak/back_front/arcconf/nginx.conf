user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;



# Load modules
load_module modules/ngx_http_lua_module.so;
load_module modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections 1024;
}

http {
    lua_package_path "/usr/local/openresty/lualib/?.lua;;";
    lua_shared_dict token_cache 10m;
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth 3;

    # Environment variables
    env KEYCLOAK_URL;
    env KEYCLOAK_REALM;
    env KEYCLOAK_CLIENT_ID;
    env KEYCLOAK_CLIENT_SECRET;
    env BACKEND_SERVICE;

    init_by_lua_block {
        require "resty.core"
        cjson = require "cjson"
        http = require "resty.http"
        jwt = require "resty.jwt"

        -- Keycloak configuration
        KEYCLOAK_CONFIG = {
            url = os.getenv("KEYCLOAK_URL") or "http://keycloak:8080",
            realm = os.getenv("KEYCLOAK_REALM") or "master",
            client_id = os.getenv("KEYCLOAK_CLIENT_ID"),
            client_secret = os.getenv("KEYCLOAK_CLIENT_SECRET"),
            timeout = 5000
        }

        -- Validate required config
        if not KEYCLOAK_CONFIG.client_id or not KEYCLOAK_CONFIG.client_secret then
            ngx.log(ngx.EMERG, "Keycloak client credentials not configured!")
            os.exit(1)
        end
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    map $upstream_http_content_type $token_state {
        default         "invalid";
        "~*json"        "valid";
    }
    include /etc/nginx/conf.d/*.conf;

}
